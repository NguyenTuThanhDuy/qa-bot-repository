version: "1.0"
name: "knowledge_base"

services:
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_storage:/qdrant/storage:z
    networks:
      - knowledge_base

  postgres:
    image: ankane/pgvector:latest
    container_name: postgres_pgvector
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: always
    healthcheck:
      test: ["CMD", "psql", "-U", "postgres"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - knowledge_base

  pgadmin4:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=duynguyen@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=12345678
    ports:
      - "15432:80"
    networks:
      - knowledge_base
    depends_on:
      postgres:
        condition: service_healthy

  
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always
    volumes:
      - ./redis-data:/data
    networks:
      - knowledge_base
  
  redisnisight:
    container_name: redis_insight
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    networks:
      - knowledge_base
    depends_on:
      redis:
        condition: service_healthy
  
  nginx:
    image: nginx:latest
    container_name: nginx
    # depends_on:
    #   - django
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    pull_policy: if_not_present

networks:
  knowledge_base:
    driver: bridge

volumes:
  qdrant:
  postgres_pgvector:
  redis:
